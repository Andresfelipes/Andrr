//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Proyecto.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ADMISEntities2 : DbContext
    {
        public ADMISEntities2()
            : base("name=ADMISEntities2")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Acciones> Acciones { get; set; }
        public virtual DbSet<Detalle_permiso> Detalle_permiso { get; set; }
        public virtual DbSet<Modulos> Modulos { get; set; }
        public virtual DbSet<Tb_Abonos> Tb_Abonos { get; set; }
        public virtual DbSet<Tb_AbonosCuotas> Tb_AbonosCuotas { get; set; }
        public virtual DbSet<Tb_bajas> Tb_bajas { get; set; }
        public virtual DbSet<Tb_Clientes> Tb_Clientes { get; set; }
        public virtual DbSet<Tb_Configuraciones> Tb_Configuraciones { get; set; }
        public virtual DbSet<Tb_Creditos> Tb_Creditos { get; set; }
        public virtual DbSet<Tb_Cuotas> Tb_Cuotas { get; set; }
        public virtual DbSet<Tb_Detalle_Bajas> Tb_Detalle_Bajas { get; set; }
        public virtual DbSet<Tb_Detalle_Entrada> Tb_Detalle_Entrada { get; set; }
        public virtual DbSet<Tb_Detalle_Producto_Sucursal> Tb_Detalle_Producto_Sucursal { get; set; }
        public virtual DbSet<Tb_DetalleTranslados> Tb_DetalleTranslados { get; set; }
        public virtual DbSet<Tb_DetalleVenta> Tb_DetalleVenta { get; set; }
        public virtual DbSet<Tb_Dian> Tb_Dian { get; set; }
        public virtual DbSet<Tb_Entradas> Tb_Entradas { get; set; }
        public virtual DbSet<Tb_Estados> Tb_Estados { get; set; }
        public virtual DbSet<Tb_Financiacion> Tb_Financiacion { get; set; }
        public virtual DbSet<Tb_Permiso> Tb_Permiso { get; set; }
        public virtual DbSet<Tb_Permiso_Denegado_Roles> Tb_Permiso_Denegado_Roles { get; set; }
        public virtual DbSet<Tb_Post> Tb_Post { get; set; }
        public virtual DbSet<Tb_Productos> Tb_Productos { get; set; }
        public virtual DbSet<Tb_Proveedores> Tb_Proveedores { get; set; }
        public virtual DbSet<Tb_Recuperar_contraseña> Tb_Recuperar_contraseña { get; set; }
        public virtual DbSet<Tb_Rol_Usuarios> Tb_Rol_Usuarios { get; set; }
        public virtual DbSet<Tb_Sucursales> Tb_Sucursales { get; set; }
        public virtual DbSet<Tb_Tipo_Documento> Tb_Tipo_Documento { get; set; }
        public virtual DbSet<Tb_Tipo_Producto> Tb_Tipo_Producto { get; set; }
        public virtual DbSet<Tb_Usuarios> Tb_Usuarios { get; set; }
        public virtual DbSet<Tb_ventas> Tb_ventas { get; set; }
        public virtual DbSet<Translados> Translados { get; set; }
    
        public virtual ObjectResult<Activos_Result> Activos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Activos_Result>("Activos");
        }
    
        public virtual int ActProveedor(Nullable<int> id, string cel, string tel, Nullable<int> tipoDoc, string direccion, Nullable<int> nit, string nom1, string nom2, string apell1, string apell2, string empresa, string estado, string email)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var celParameter = cel != null ?
                new ObjectParameter("Cel", cel) :
                new ObjectParameter("Cel", typeof(string));
    
            var telParameter = tel != null ?
                new ObjectParameter("Tel", tel) :
                new ObjectParameter("Tel", typeof(string));
    
            var tipoDocParameter = tipoDoc.HasValue ?
                new ObjectParameter("TipoDoc", tipoDoc) :
                new ObjectParameter("TipoDoc", typeof(int));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("Direccion", direccion) :
                new ObjectParameter("Direccion", typeof(string));
    
            var nitParameter = nit.HasValue ?
                new ObjectParameter("Nit", nit) :
                new ObjectParameter("Nit", typeof(int));
    
            var nom1Parameter = nom1 != null ?
                new ObjectParameter("Nom1", nom1) :
                new ObjectParameter("Nom1", typeof(string));
    
            var nom2Parameter = nom2 != null ?
                new ObjectParameter("Nom2", nom2) :
                new ObjectParameter("Nom2", typeof(string));
    
            var apell1Parameter = apell1 != null ?
                new ObjectParameter("Apell1", apell1) :
                new ObjectParameter("Apell1", typeof(string));
    
            var apell2Parameter = apell2 != null ?
                new ObjectParameter("Apell2", apell2) :
                new ObjectParameter("Apell2", typeof(string));
    
            var empresaParameter = empresa != null ?
                new ObjectParameter("Empresa", empresa) :
                new ObjectParameter("Empresa", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActProveedor", idParameter, celParameter, telParameter, tipoDocParameter, direccionParameter, nitParameter, nom1Parameter, nom2Parameter, apell1Parameter, apell2Parameter, empresaParameter, estadoParameter, emailParameter);
        }
    
        public virtual int ActSucursal(Nullable<int> codigo, string nombre, string apodo, string prefijo, string telefono, string direccion, string nIT)
        {
            var codigoParameter = codigo.HasValue ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apodoParameter = apodo != null ?
                new ObjectParameter("Apodo", apodo) :
                new ObjectParameter("Apodo", typeof(string));
    
            var prefijoParameter = prefijo != null ?
                new ObjectParameter("Prefijo", prefijo) :
                new ObjectParameter("Prefijo", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("Direccion", direccion) :
                new ObjectParameter("Direccion", typeof(string));
    
            var nITParameter = nIT != null ?
                new ObjectParameter("NIT", nIT) :
                new ObjectParameter("NIT", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActSucursal", codigoParameter, nombreParameter, apodoParameter, prefijoParameter, telefonoParameter, direccionParameter, nITParameter);
        }
    
        public virtual int Actualiza_producto_Sucursal(string sucur, Nullable<int> strock_min, Nullable<int> stock_max, Nullable<double> valor_venta, Nullable<double> valor_mayor, Nullable<double> valor_especial, Nullable<int> cantidad, string producto)
        {
            var sucurParameter = sucur != null ?
                new ObjectParameter("Sucur", sucur) :
                new ObjectParameter("Sucur", typeof(string));
    
            var strock_minParameter = strock_min.HasValue ?
                new ObjectParameter("strock_min", strock_min) :
                new ObjectParameter("strock_min", typeof(int));
    
            var stock_maxParameter = stock_max.HasValue ?
                new ObjectParameter("stock_max", stock_max) :
                new ObjectParameter("stock_max", typeof(int));
    
            var valor_ventaParameter = valor_venta.HasValue ?
                new ObjectParameter("valor_venta", valor_venta) :
                new ObjectParameter("valor_venta", typeof(double));
    
            var valor_mayorParameter = valor_mayor.HasValue ?
                new ObjectParameter("valor_mayor", valor_mayor) :
                new ObjectParameter("valor_mayor", typeof(double));
    
            var valor_especialParameter = valor_especial.HasValue ?
                new ObjectParameter("valor_especial", valor_especial) :
                new ObjectParameter("valor_especial", typeof(double));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("cantidad", cantidad) :
                new ObjectParameter("cantidad", typeof(int));
    
            var productoParameter = producto != null ?
                new ObjectParameter("producto", producto) :
                new ObjectParameter("producto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Actualiza_producto_Sucursal", sucurParameter, strock_minParameter, stock_maxParameter, valor_ventaParameter, valor_mayorParameter, valor_especialParameter, cantidadParameter, productoParameter);
        }
    
        public virtual int ActualizarAbono(Nullable<int> codigo, string estado)
        {
            var codigoParameter = codigo.HasValue ?
                new ObjectParameter("codigo", codigo) :
                new ObjectParameter("codigo", typeof(int));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizarAbono", codigoParameter, estadoParameter);
        }
    
        public virtual int ActualizarCliente(Nullable<long> identificacion, string nombre1, string nombre2, string apellido1, string apellido2, string telefono, string celular, string email, string estado, string tipo, string direccion, string ciudad, string cupo_activo, string solicitud, Nullable<int> tipo_Documento_Codigo)
        {
            var identificacionParameter = identificacion.HasValue ?
                new ObjectParameter("Identificacion", identificacion) :
                new ObjectParameter("Identificacion", typeof(long));
    
            var nombre1Parameter = nombre1 != null ?
                new ObjectParameter("Nombre1", nombre1) :
                new ObjectParameter("Nombre1", typeof(string));
    
            var nombre2Parameter = nombre2 != null ?
                new ObjectParameter("Nombre2", nombre2) :
                new ObjectParameter("Nombre2", typeof(string));
    
            var apellido1Parameter = apellido1 != null ?
                new ObjectParameter("Apellido1", apellido1) :
                new ObjectParameter("Apellido1", typeof(string));
    
            var apellido2Parameter = apellido2 != null ?
                new ObjectParameter("Apellido2", apellido2) :
                new ObjectParameter("Apellido2", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var celularParameter = celular != null ?
                new ObjectParameter("Celular", celular) :
                new ObjectParameter("Celular", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("Tipo", tipo) :
                new ObjectParameter("Tipo", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("Direccion", direccion) :
                new ObjectParameter("Direccion", typeof(string));
    
            var ciudadParameter = ciudad != null ?
                new ObjectParameter("Ciudad", ciudad) :
                new ObjectParameter("Ciudad", typeof(string));
    
            var cupo_activoParameter = cupo_activo != null ?
                new ObjectParameter("Cupo_activo", cupo_activo) :
                new ObjectParameter("Cupo_activo", typeof(string));
    
            var solicitudParameter = solicitud != null ?
                new ObjectParameter("Solicitud", solicitud) :
                new ObjectParameter("Solicitud", typeof(string));
    
            var tipo_Documento_CodigoParameter = tipo_Documento_Codigo.HasValue ?
                new ObjectParameter("Tipo_Documento_Codigo", tipo_Documento_Codigo) :
                new ObjectParameter("Tipo_Documento_Codigo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizarCliente", identificacionParameter, nombre1Parameter, nombre2Parameter, apellido1Parameter, apellido2Parameter, telefonoParameter, celularParameter, emailParameter, estadoParameter, tipoParameter, direccionParameter, ciudadParameter, cupo_activoParameter, solicitudParameter, tipo_Documento_CodigoParameter);
        }
    
        public virtual int ActualizarEstado(Nullable<int> id, string nombre)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizarEstado", idParameter, nombreParameter);
        }
    
        public virtual int ActualizarProducto(string codigoProducto, string @ref, string desc, string estado, string tipoProd)
        {
            var codigoProductoParameter = codigoProducto != null ?
                new ObjectParameter("CodigoProducto", codigoProducto) :
                new ObjectParameter("CodigoProducto", typeof(string));
    
            var refParameter = @ref != null ?
                new ObjectParameter("Ref", @ref) :
                new ObjectParameter("Ref", typeof(string));
    
            var descParameter = desc != null ?
                new ObjectParameter("Desc", desc) :
                new ObjectParameter("Desc", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            var tipoProdParameter = tipoProd != null ?
                new ObjectParameter("TipoProd", tipoProd) :
                new ObjectParameter("TipoProd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizarProducto", codigoProductoParameter, refParameter, descParameter, estadoParameter, tipoProdParameter);
        }
    
        public virtual int ActualizarTipoProd(Nullable<int> cod, string nombre)
        {
            var codParameter = cod.HasValue ?
                new ObjectParameter("cod", cod) :
                new ObjectParameter("cod", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizarTipoProd", codParameter, nombreParameter);
        }
    
        public virtual int ActualizarUsuario(Nullable<long> id, Nullable<int> tipoDoc, string sucursal, string nom1, string nom2, string apell1, string apell2, string email, Nullable<int> rol, string estado)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var tipoDocParameter = tipoDoc.HasValue ?
                new ObjectParameter("TipoDoc", tipoDoc) :
                new ObjectParameter("TipoDoc", typeof(int));
    
            var sucursalParameter = sucursal != null ?
                new ObjectParameter("Sucursal", sucursal) :
                new ObjectParameter("Sucursal", typeof(string));
    
            var nom1Parameter = nom1 != null ?
                new ObjectParameter("Nom1", nom1) :
                new ObjectParameter("Nom1", typeof(string));
    
            var nom2Parameter = nom2 != null ?
                new ObjectParameter("Nom2", nom2) :
                new ObjectParameter("Nom2", typeof(string));
    
            var apell1Parameter = apell1 != null ?
                new ObjectParameter("Apell1", apell1) :
                new ObjectParameter("Apell1", typeof(string));
    
            var apell2Parameter = apell2 != null ?
                new ObjectParameter("Apell2", apell2) :
                new ObjectParameter("Apell2", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var rolParameter = rol.HasValue ?
                new ObjectParameter("Rol", rol) :
                new ObjectParameter("Rol", typeof(int));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizarUsuario", idParameter, tipoDocParameter, sucursalParameter, nom1Parameter, nom2Parameter, apell1Parameter, apell2Parameter, emailParameter, rolParameter, estadoParameter);
        }
    
        public virtual int Anular_Abono(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Anular_Abono", idParameter);
        }
    
        public virtual int Anular_Credito(Nullable<int> codigo)
        {
            var codigoParameter = codigo.HasValue ?
                new ObjectParameter("codigo", codigo) :
                new ObjectParameter("codigo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Anular_Credito", codigoParameter);
        }
    
        public virtual ObjectResult<Nullable<double>> Aumento()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<double>>("Aumento");
        }
    
        public virtual int cambiar_estado_cliente(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("cambiar_estado_cliente", idParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> cambiar_estado_credito(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("cambiar_estado_credito", idParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> cambiar_estado_Financiacion(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("cambiar_estado_Financiacion", idParameter);
        }
    
        public virtual int cambiar_estado_producto(string id)
        {
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("cambiar_estado_producto", idParameter);
        }
    
        public virtual int cambiar_estado_proveedor(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("cambiar_estado_proveedor", idParameter);
        }
    
        public virtual int cambiar_estado_usuario(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("cambiar_estado_usuario", idParameter);
        }
    
        public virtual int cambiar_estado_Ventas(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("cambiar_estado_Ventas", idParameter);
        }
    
        public virtual ObjectResult<string> Campos_prov(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Campos_prov", idParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Cantidad_Detalle(string producto, Nullable<int> cantidad, Nullable<int> sucursal)
        {
            var productoParameter = producto != null ?
                new ObjectParameter("producto", producto) :
                new ObjectParameter("producto", typeof(string));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(int));
    
            var sucursalParameter = sucursal.HasValue ?
                new ObjectParameter("sucursal", sucursal) :
                new ObjectParameter("sucursal", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Cantidad_Detalle", productoParameter, cantidadParameter, sucursalParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Cantidad_Detalle_baja(string producto, Nullable<int> cantidad, Nullable<int> sucursal)
        {
            var productoParameter = producto != null ?
                new ObjectParameter("producto", producto) :
                new ObjectParameter("producto", typeof(string));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(int));
    
            var sucursalParameter = sucursal.HasValue ?
                new ObjectParameter("sucursal", sucursal) :
                new ObjectParameter("sucursal", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Cantidad_Detalle_baja", productoParameter, cantidadParameter, sucursalParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Cargar_Cuota(string financiacion)
        {
            var financiacionParameter = financiacion != null ?
                new ObjectParameter("financiacion", financiacion) :
                new ObjectParameter("financiacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Cargar_Cuota", financiacionParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Cargar_Dian(string sucursal)
        {
            var sucursalParameter = sucursal != null ?
                new ObjectParameter("Sucursal", sucursal) :
                new ObjectParameter("Sucursal", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Cargar_Dian", sucursalParameter);
        }
    
        public virtual ObjectResult<Nullable<double>> Cargar_Iva()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<double>>("Cargar_Iva");
        }
    
        public virtual ObjectResult<Cargar_Venta_Result> Cargar_Venta(Nullable<int> venta)
        {
            var ventaParameter = venta.HasValue ?
                new ObjectParameter("Venta", venta) :
                new ObjectParameter("Venta", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Cargar_Venta_Result>("Cargar_Venta", ventaParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> CargarCUpo()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("CargarCUpo");
        }
    
        public virtual ObjectResult<Nullable<int>> Clientes_estado(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Clientes_estado", idParameter);
        }
    
        public virtual ObjectResult<ComprobanteAbonoCredito_Result> ComprobanteAbonoCredito(Nullable<int> cod)
        {
            var codParameter = cod.HasValue ?
                new ObjectParameter("cod", cod) :
                new ObjectParameter("cod", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ComprobanteAbonoCredito_Result>("ComprobanteAbonoCredito", codParameter);
        }
    
        public virtual ObjectResult<ComprobanteAbonoCuota_Result> ComprobanteAbonoCuota(Nullable<int> cod)
        {
            var codParameter = cod.HasValue ?
                new ObjectParameter("cod", cod) :
                new ObjectParameter("cod", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ComprobanteAbonoCuota_Result>("ComprobanteAbonoCuota", codParameter);
        }
    
        public virtual ObjectResult<ComprobanteAbonoCuota1_Result> ComprobanteAbonoCuota1(Nullable<int> cod)
        {
            var codParameter = cod.HasValue ?
                new ObjectParameter("cod", cod) :
                new ObjectParameter("cod", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ComprobanteAbonoCuota1_Result>("ComprobanteAbonoCuota1", codParameter);
        }
    
        public virtual ObjectResult<ComprobanteAbonoCuotas_Result> ComprobanteAbonoCuotas(Nullable<int> cod)
        {
            var codParameter = cod.HasValue ?
                new ObjectParameter("cod", cod) :
                new ObjectParameter("cod", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ComprobanteAbonoCuotas_Result>("ComprobanteAbonoCuotas", codParameter);
        }
    
        public virtual ObjectResult<ComprobanteTraslado_Result> ComprobanteTraslado(Nullable<int> cod)
        {
            var codParameter = cod.HasValue ?
                new ObjectParameter("cod", cod) :
                new ObjectParameter("cod", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ComprobanteTraslado_Result>("ComprobanteTraslado", codParameter);
        }
    
        public virtual ObjectResult<ComprobanteTraslados_Result> ComprobanteTraslados(Nullable<int> cod)
        {
            var codParameter = cod.HasValue ?
                new ObjectParameter("cod", cod) :
                new ObjectParameter("cod", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ComprobanteTraslados_Result>("ComprobanteTraslados", codParameter);
        }
    
        public virtual ObjectResult<Consul_User_Result> Consul_User(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Consul_User_Result>("Consul_User", idParameter);
        }
    
        public virtual ObjectResult<Consultar_Abonos_Cuotas_Result> Consultar_Abonos_Cuotas(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Consultar_Abonos_Cuotas_Result>("Consultar_Abonos_Cuotas", idParameter);
        }
    
        public virtual ObjectResult<Consultar_Baja_Result> Consultar_Baja()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Consultar_Baja_Result>("Consultar_Baja");
        }
    
        public virtual ObjectResult<Consultar_Credito_Result> Consultar_Credito(Nullable<int> identificacion)
        {
            var identificacionParameter = identificacion.HasValue ?
                new ObjectParameter("Identificacion", identificacion) :
                new ObjectParameter("Identificacion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Consultar_Credito_Result>("Consultar_Credito", identificacionParameter);
        }
    
        public virtual ObjectResult<Consultar_Cuotas_Result> Consultar_Cuotas(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Consultar_Cuotas_Result>("Consultar_Cuotas", idParameter);
        }
    
        public virtual ObjectResult<consultar_Det_TrasladoPDF_Result> consultar_Det_TrasladoPDF(Nullable<int> codigo)
        {
            var codigoParameter = codigo.HasValue ?
                new ObjectParameter("codigo", codigo) :
                new ObjectParameter("codigo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<consultar_Det_TrasladoPDF_Result>("consultar_Det_TrasladoPDF", codigoParameter);
        }
    
        public virtual ObjectResult<Consultar_Detalle_Result> Consultar_Detalle(Nullable<int> venta)
        {
            var ventaParameter = venta.HasValue ?
                new ObjectParameter("venta", venta) :
                new ObjectParameter("venta", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Consultar_Detalle_Result>("Consultar_Detalle", ventaParameter);
        }
    
        public virtual ObjectResult<Consultar_Detalle_Entrada_Result> Consultar_Detalle_Entrada(Nullable<int> entrada)
        {
            var entradaParameter = entrada.HasValue ?
                new ObjectParameter("entrada", entrada) :
                new ObjectParameter("entrada", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Consultar_Detalle_Entrada_Result>("Consultar_Detalle_Entrada", entradaParameter);
        }
    
        public virtual ObjectResult<consultar_detalle_pdf_Result> consultar_detalle_pdf(Nullable<int> codigo)
        {
            var codigoParameter = codigo.HasValue ?
                new ObjectParameter("codigo", codigo) :
                new ObjectParameter("codigo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<consultar_detalle_pdf_Result>("consultar_detalle_pdf", codigoParameter);
        }
    
        public virtual ObjectResult<consultar_detalle_permiso_Result> consultar_detalle_permiso(Nullable<int> permiso)
        {
            var permisoParameter = permiso.HasValue ?
                new ObjectParameter("permiso", permiso) :
                new ObjectParameter("permiso", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<consultar_detalle_permiso_Result>("consultar_detalle_permiso", permisoParameter);
        }
    
        public virtual ObjectResult<consultar_detalle_permiso1_Result> consultar_detalle_permiso1(Nullable<int> permiso)
        {
            var permisoParameter = permiso.HasValue ?
                new ObjectParameter("permiso", permiso) :
                new ObjectParameter("permiso", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<consultar_detalle_permiso1_Result>("consultar_detalle_permiso1", permisoParameter);
        }
    
        public virtual ObjectResult<Consultar_Detalle_Traslado_Result> Consultar_Detalle_Traslado(Nullable<int> traslado)
        {
            var trasladoParameter = traslado.HasValue ?
                new ObjectParameter("traslado", traslado) :
                new ObjectParameter("traslado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Consultar_Detalle_Traslado_Result>("Consultar_Detalle_Traslado", trasladoParameter);
        }
    
        public virtual ObjectResult<consultar_Detalle_TrasladoPDF_Result> consultar_Detalle_TrasladoPDF(Nullable<int> codigo)
        {
            var codigoParameter = codigo.HasValue ?
                new ObjectParameter("codigo", codigo) :
                new ObjectParameter("codigo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<consultar_Detalle_TrasladoPDF_Result>("consultar_Detalle_TrasladoPDF", codigoParameter);
        }
    
        public virtual ObjectResult<Consultar_Dian_Result> Consultar_Dian(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Consultar_Dian_Result>("Consultar_Dian", idParameter);
        }
    
        public virtual ObjectResult<Consultar_Entrada_Result> Consultar_Entrada()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Consultar_Entrada_Result>("Consultar_Entrada");
        }
    
        public virtual ObjectResult<Nullable<int>> Consultar_permiso()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Consultar_permiso");
        }
    
        public virtual ObjectResult<Consultar_Productos_Result> Consultar_Productos(string estado)
        {
            var estadoParameter = estado != null ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Consultar_Productos_Result>("Consultar_Productos", estadoParameter);
        }
    
        public virtual ObjectResult<Consultar_Translado_Result> Consultar_Translado()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Consultar_Translado_Result>("Consultar_Translado");
        }
    
        public virtual ObjectResult<Consultar_Venta_Result> Consultar_Venta(string estado)
        {
            var estadoParameter = estado != null ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Consultar_Venta_Result>("Consultar_Venta", estadoParameter);
        }
    
        public virtual ObjectResult<ConsultarClientes_Result> ConsultarClientes(Nullable<int> identificacion, string nombre1, string estado)
        {
            var identificacionParameter = identificacion.HasValue ?
                new ObjectParameter("Identificacion", identificacion) :
                new ObjectParameter("Identificacion", typeof(int));
    
            var nombre1Parameter = nombre1 != null ?
                new ObjectParameter("Nombre1", nombre1) :
                new ObjectParameter("Nombre1", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarClientes_Result>("ConsultarClientes", identificacionParameter, nombre1Parameter, estadoParameter);
        }
    
        public virtual ObjectResult<ConsultarFinanciacion_Result> ConsultarFinanciacion(Nullable<int> identificacion)
        {
            var identificacionParameter = identificacion.HasValue ?
                new ObjectParameter("Identificacion", identificacion) :
                new ObjectParameter("Identificacion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarFinanciacion_Result>("ConsultarFinanciacion", identificacionParameter);
        }
    
        public virtual ObjectResult<ConsultarProveedor_Result> ConsultarProveedor(string estado)
        {
            var estadoParameter = estado != null ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarProveedor_Result>("ConsultarProveedor", estadoParameter);
        }
    
        public virtual ObjectResult<ConsultarUsuarios_Result> ConsultarUsuarios(string estado)
        {
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarUsuarios_Result>("ConsultarUsuarios", estadoParameter);
        }
    
        public virtual ObjectResult<ConsultarVentas_Result> ConsultarVentas(Nullable<int> identificacion)
        {
            var identificacionParameter = identificacion.HasValue ?
                new ObjectParameter("Identificacion", identificacion) :
                new ObjectParameter("Identificacion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarVentas_Result>("ConsultarVentas", identificacionParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> ContarConfiguracion()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ContarConfiguracion");
        }
    
        public virtual ObjectResult<Nullable<int>> contardetalle(Nullable<int> codigo)
        {
            var codigoParameter = codigo.HasValue ?
                new ObjectParameter("codigo", codigo) :
                new ObjectParameter("codigo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("contardetalle", codigoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> contardetalleTraslados(Nullable<int> codigo)
        {
            var codigoParameter = codigo.HasValue ?
                new ObjectParameter("codigo", codigo) :
                new ObjectParameter("codigo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("contardetalleTraslados", codigoParameter);
        }
    
        public virtual ObjectResult<conusltar_detalle_baja_Result> conusltar_detalle_baja(Nullable<int> codigo)
        {
            var codigoParameter = codigo.HasValue ?
                new ObjectParameter("codigo", codigo) :
                new ObjectParameter("codigo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<conusltar_detalle_baja_Result>("conusltar_detalle_baja", codigoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Cuota()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Cuota");
        }
    
        public virtual ObjectResult<Editar_Result> Editar(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Editar_Result>("Editar", idParameter);
        }
    
        public virtual int editar_rol(Nullable<int> id, string nombre)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("editar_rol", idParameter, nombreParameter);
        }
    
        public virtual int EliminarRol(Nullable<int> codigo)
        {
            var codigoParameter = codigo.HasValue ?
                new ObjectParameter("codigo", codigo) :
                new ObjectParameter("codigo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EliminarRol", codigoParameter);
        }
    
        public virtual int EliminarSucursal(Nullable<int> codigo)
        {
            var codigoParameter = codigo.HasValue ?
                new ObjectParameter("codigo", codigo) :
                new ObjectParameter("codigo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EliminarSucursal", codigoParameter);
        }
    
        public virtual int EliminarTipoDoc(Nullable<int> codigo)
        {
            var codigoParameter = codigo.HasValue ?
                new ObjectParameter("codigo", codigo) :
                new ObjectParameter("codigo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EliminarTipoDoc", codigoParameter);
        }
    
        public virtual ObjectResult<elminar_permisos_Result> elminar_permisos(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<elminar_permisos_Result>("elminar_permisos", idParameter);
        }
    
        public virtual ObjectResult<Estado_Result> Estado(Nullable<int> estado)
        {
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Estado_Result>("Estado", estadoParameter);
        }
    
        public virtual int estaRegistrado_delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("estaRegistrado_delete", idParameter);
        }
    
        public virtual ObjectResult<facturaCrédito_Result> facturaCrédito(Nullable<int> cod)
        {
            var codParameter = cod.HasValue ?
                new ObjectParameter("cod", cod) :
                new ObjectParameter("cod", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<facturaCrédito_Result>("facturaCrédito", codParameter);
        }
    
        public virtual ObjectResult<FacturaFinanciacion_Result> FacturaFinanciacion(Nullable<int> cod)
        {
            var codParameter = cod.HasValue ?
                new ObjectParameter("cod", cod) :
                new ObjectParameter("cod", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FacturaFinanciacion_Result>("FacturaFinanciacion", codParameter);
        }
    
        public virtual ObjectResult<FacturaFinanciacionPDF_Result> FacturaFinanciacionPDF(Nullable<int> cod)
        {
            var codParameter = cod.HasValue ?
                new ObjectParameter("cod", cod) :
                new ObjectParameter("cod", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FacturaFinanciacionPDF_Result>("FacturaFinanciacionPDF", codParameter);
        }
    
        public virtual ObjectResult<string> Fecha()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Fecha");
        }
    
        public virtual ObjectResult<Nullable<int>> Inactivo(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Inactivo", emailParameter);
        }
    
        public virtual int InsertarClientes(Nullable<long> identificacion, string nombre1, string nombre2, string apellido1, string apellido2, string telefono, string celular, string email, string estado, string tipo, string direccion, string ciudad, string cupo_activo, string solicitud, Nullable<int> tipo_Documento_Codigo)
        {
            var identificacionParameter = identificacion.HasValue ?
                new ObjectParameter("Identificacion", identificacion) :
                new ObjectParameter("Identificacion", typeof(long));
    
            var nombre1Parameter = nombre1 != null ?
                new ObjectParameter("Nombre1", nombre1) :
                new ObjectParameter("Nombre1", typeof(string));
    
            var nombre2Parameter = nombre2 != null ?
                new ObjectParameter("nombre2", nombre2) :
                new ObjectParameter("nombre2", typeof(string));
    
            var apellido1Parameter = apellido1 != null ?
                new ObjectParameter("Apellido1", apellido1) :
                new ObjectParameter("Apellido1", typeof(string));
    
            var apellido2Parameter = apellido2 != null ?
                new ObjectParameter("Apellido2", apellido2) :
                new ObjectParameter("Apellido2", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var celularParameter = celular != null ?
                new ObjectParameter("Celular", celular) :
                new ObjectParameter("Celular", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("Tipo", tipo) :
                new ObjectParameter("Tipo", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("Direccion", direccion) :
                new ObjectParameter("Direccion", typeof(string));
    
            var ciudadParameter = ciudad != null ?
                new ObjectParameter("Ciudad", ciudad) :
                new ObjectParameter("Ciudad", typeof(string));
    
            var cupo_activoParameter = cupo_activo != null ?
                new ObjectParameter("Cupo_activo", cupo_activo) :
                new ObjectParameter("Cupo_activo", typeof(string));
    
            var solicitudParameter = solicitud != null ?
                new ObjectParameter("Solicitud", solicitud) :
                new ObjectParameter("Solicitud", typeof(string));
    
            var tipo_Documento_CodigoParameter = tipo_Documento_Codigo.HasValue ?
                new ObjectParameter("Tipo_Documento_Codigo", tipo_Documento_Codigo) :
                new ObjectParameter("Tipo_Documento_Codigo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertarClientes", identificacionParameter, nombre1Parameter, nombre2Parameter, apellido1Parameter, apellido2Parameter, telefonoParameter, celularParameter, emailParameter, estadoParameter, tipoParameter, direccionParameter, ciudadParameter, cupo_activoParameter, solicitudParameter, tipo_Documento_CodigoParameter);
        }
    
        public virtual ObjectResult<string> Llamar_Sucursal(string user)
        {
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Llamar_Sucursal", userParameter);
        }
    
        public virtual ObjectResult<llenap_entrada_Result> llenap_entrada(string sucur)
        {
            var sucurParameter = sucur != null ?
                new ObjectParameter("sucur", sucur) :
                new ObjectParameter("sucur", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<llenap_entrada_Result>("llenap_entrada", sucurParameter);
        }
    
        public virtual ObjectResult<llenarp_Result> llenarp(string user)
        {
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<llenarp_Result>("llenarp", userParameter);
        }
    
        public virtual int mora()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("mora");
        }
    
        public virtual ObjectResult<pdf_Result> pdf(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pdf_Result>("pdf", idParameter);
        }
    
        public virtual ObjectResult<PDFtraslados_Result> PDFtraslados(Nullable<int> cod)
        {
            var codParameter = cod.HasValue ?
                new ObjectParameter("cod", cod) :
                new ObjectParameter("cod", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PDFtraslados_Result>("PDFtraslados", codParameter);
        }
    
        public virtual ObjectResult<Nullable<double>> Precio(string producto, Nullable<int> sucursal, string valor)
        {
            var productoParameter = producto != null ?
                new ObjectParameter("producto", producto) :
                new ObjectParameter("producto", typeof(string));
    
            var sucursalParameter = sucursal.HasValue ?
                new ObjectParameter("Sucursal", sucursal) :
                new ObjectParameter("Sucursal", typeof(int));
    
            var valorParameter = valor != null ?
                new ObjectParameter("Valor", valor) :
                new ObjectParameter("Valor", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<double>>("Precio", productoParameter, sucursalParameter, valorParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> precio_Entrada(string id)
        {
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("precio_Entrada", idParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Producto(string id, Nullable<int> suc)
        {
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            var sucParameter = suc.HasValue ?
                new ObjectParameter("suc", suc) :
                new ObjectParameter("suc", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Producto", idParameter, sucParameter);
        }
    
        public virtual ObjectResult<Nullable<double>> Recargos(Nullable<int> codigo)
        {
            var codigoParameter = codigo.HasValue ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<double>>("Recargos", codigoParameter);
        }
    
        public virtual int Reg_Credito(Nullable<int> codigo, Nullable<System.DateTime> fecha, Nullable<int> estado, Nullable<int> num_pagare, Nullable<int> cuota_inicial, Nullable<double> total_adeudado, Nullable<int> venta)
        {
            var codigoParameter = codigo.HasValue ?
                new ObjectParameter("codigo", codigo) :
                new ObjectParameter("codigo", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(int));
    
            var num_pagareParameter = num_pagare.HasValue ?
                new ObjectParameter("num_pagare", num_pagare) :
                new ObjectParameter("num_pagare", typeof(int));
    
            var cuota_inicialParameter = cuota_inicial.HasValue ?
                new ObjectParameter("cuota_inicial", cuota_inicial) :
                new ObjectParameter("cuota_inicial", typeof(int));
    
            var total_adeudadoParameter = total_adeudado.HasValue ?
                new ObjectParameter("total_adeudado", total_adeudado) :
                new ObjectParameter("total_adeudado", typeof(double));
    
            var ventaParameter = venta.HasValue ?
                new ObjectParameter("venta", venta) :
                new ObjectParameter("venta", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Reg_Credito", codigoParameter, fechaParameter, estadoParameter, num_pagareParameter, cuota_inicialParameter, total_adeudadoParameter, ventaParameter);
        }
    
        public virtual int Reg_Financiacion(Nullable<int> codigo, Nullable<System.DateTime> fecha, Nullable<int> estado, Nullable<int> num_pagare, string tiempo, Nullable<double> aumento, Nullable<double> total, Nullable<double> cuota_inicial, Nullable<double> total_Adeudado, Nullable<int> venta)
        {
            var codigoParameter = codigo.HasValue ?
                new ObjectParameter("codigo", codigo) :
                new ObjectParameter("codigo", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(int));
    
            var num_pagareParameter = num_pagare.HasValue ?
                new ObjectParameter("num_pagare", num_pagare) :
                new ObjectParameter("num_pagare", typeof(int));
    
            var tiempoParameter = tiempo != null ?
                new ObjectParameter("tiempo", tiempo) :
                new ObjectParameter("tiempo", typeof(string));
    
            var aumentoParameter = aumento.HasValue ?
                new ObjectParameter("aumento", aumento) :
                new ObjectParameter("aumento", typeof(double));
    
            var totalParameter = total.HasValue ?
                new ObjectParameter("total", total) :
                new ObjectParameter("total", typeof(double));
    
            var cuota_inicialParameter = cuota_inicial.HasValue ?
                new ObjectParameter("Cuota_inicial", cuota_inicial) :
                new ObjectParameter("Cuota_inicial", typeof(double));
    
            var total_AdeudadoParameter = total_Adeudado.HasValue ?
                new ObjectParameter("Total_Adeudado", total_Adeudado) :
                new ObjectParameter("Total_Adeudado", typeof(double));
    
            var ventaParameter = venta.HasValue ?
                new ObjectParameter("venta", venta) :
                new ObjectParameter("venta", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Reg_Financiacion", codigoParameter, fechaParameter, estadoParameter, num_pagareParameter, tiempoParameter, aumentoParameter, totalParameter, cuota_inicialParameter, total_AdeudadoParameter, ventaParameter);
        }
    
        public virtual int RegDetalleProdSucursal(string codigo_detalle, Nullable<int> stockMin, Nullable<int> stockMax, Nullable<double> valorVenta, Nullable<double> valorMayor, Nullable<double> valorEspecial, Nullable<int> cantidad, string producto, string sucursal)
        {
            var codigo_detalleParameter = codigo_detalle != null ?
                new ObjectParameter("codigo_detalle", codigo_detalle) :
                new ObjectParameter("codigo_detalle", typeof(string));
    
            var stockMinParameter = stockMin.HasValue ?
                new ObjectParameter("StockMin", stockMin) :
                new ObjectParameter("StockMin", typeof(int));
    
            var stockMaxParameter = stockMax.HasValue ?
                new ObjectParameter("StockMax", stockMax) :
                new ObjectParameter("StockMax", typeof(int));
    
            var valorVentaParameter = valorVenta.HasValue ?
                new ObjectParameter("ValorVenta", valorVenta) :
                new ObjectParameter("ValorVenta", typeof(double));
    
            var valorMayorParameter = valorMayor.HasValue ?
                new ObjectParameter("ValorMayor", valorMayor) :
                new ObjectParameter("ValorMayor", typeof(double));
    
            var valorEspecialParameter = valorEspecial.HasValue ?
                new ObjectParameter("ValorEspecial", valorEspecial) :
                new ObjectParameter("ValorEspecial", typeof(double));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(int));
    
            var productoParameter = producto != null ?
                new ObjectParameter("Producto", producto) :
                new ObjectParameter("Producto", typeof(string));
    
            var sucursalParameter = sucursal != null ?
                new ObjectParameter("Sucursal", sucursal) :
                new ObjectParameter("Sucursal", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RegDetalleProdSucursal", codigo_detalleParameter, stockMinParameter, stockMaxParameter, valorVentaParameter, valorMayorParameter, valorEspecialParameter, cantidadParameter, productoParameter, sucursalParameter);
        }
    
        public virtual int RegDetalleTraslado(Nullable<int> cantidad, string productoSucursal, Nullable<double> precio, Nullable<int> translado)
        {
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(int));
    
            var productoSucursalParameter = productoSucursal != null ?
                new ObjectParameter("ProductoSucursal", productoSucursal) :
                new ObjectParameter("ProductoSucursal", typeof(string));
    
            var precioParameter = precio.HasValue ?
                new ObjectParameter("Precio", precio) :
                new ObjectParameter("Precio", typeof(double));
    
            var transladoParameter = translado.HasValue ?
                new ObjectParameter("Translado", translado) :
                new ObjectParameter("Translado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RegDetalleTraslado", cantidadParameter, productoSucursalParameter, precioParameter, transladoParameter);
        }
    
        public virtual int RegDetalleVenta(Nullable<int> cantidad, Nullable<double> descuento, Nullable<int> venta, Nullable<double> precio, string producto)
        {
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(int));
    
            var descuentoParameter = descuento.HasValue ?
                new ObjectParameter("Descuento", descuento) :
                new ObjectParameter("Descuento", typeof(double));
    
            var ventaParameter = venta.HasValue ?
                new ObjectParameter("Venta", venta) :
                new ObjectParameter("Venta", typeof(int));
    
            var precioParameter = precio.HasValue ?
                new ObjectParameter("precio", precio) :
                new ObjectParameter("precio", typeof(double));
    
            var productoParameter = producto != null ?
                new ObjectParameter("Producto", producto) :
                new ObjectParameter("Producto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RegDetalleVenta", cantidadParameter, descuentoParameter, ventaParameter, precioParameter, productoParameter);
        }
    
        public virtual int RegistraDetaleTraslado(Nullable<int> cantidad, string producto, Nullable<double> precio, Nullable<int> traslado)
        {
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("cantidad", cantidad) :
                new ObjectParameter("cantidad", typeof(int));
    
            var productoParameter = producto != null ?
                new ObjectParameter("producto", producto) :
                new ObjectParameter("producto", typeof(string));
    
            var precioParameter = precio.HasValue ?
                new ObjectParameter("precio", precio) :
                new ObjectParameter("precio", typeof(double));
    
            var trasladoParameter = traslado.HasValue ?
                new ObjectParameter("traslado", traslado) :
                new ObjectParameter("traslado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RegistraDetaleTraslado", cantidadParameter, productoParameter, precioParameter, trasladoParameter);
        }
    
        public virtual int Registrar_baja(Nullable<int> codigo, string sucursal, Nullable<System.DateTime> fecha)
        {
            var codigoParameter = codigo.HasValue ?
                new ObjectParameter("codigo", codigo) :
                new ObjectParameter("codigo", typeof(int));
    
            var sucursalParameter = sucursal != null ?
                new ObjectParameter("sucursal", sucursal) :
                new ObjectParameter("sucursal", typeof(string));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Registrar_baja", codigoParameter, sucursalParameter, fechaParameter);
        }
    
        public virtual int Registrar_Detalle_baja(Nullable<int> baja, string motivo, string producto, Nullable<int> cantidad)
        {
            var bajaParameter = baja.HasValue ?
                new ObjectParameter("baja", baja) :
                new ObjectParameter("baja", typeof(int));
    
            var motivoParameter = motivo != null ?
                new ObjectParameter("motivo", motivo) :
                new ObjectParameter("motivo", typeof(string));
    
            var productoParameter = producto != null ?
                new ObjectParameter("producto", producto) :
                new ObjectParameter("producto", typeof(string));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("cantidad", cantidad) :
                new ObjectParameter("cantidad", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Registrar_Detalle_baja", bajaParameter, motivoParameter, productoParameter, cantidadParameter);
        }
    
        public virtual int Registrar_detalle_producto_sucursal(Nullable<int> stock_min, Nullable<int> stock_max, Nullable<double> valor_venta, Nullable<double> valor_mayor, Nullable<double> valor_especial, Nullable<int> cantidad, string producto, string sucursal)
        {
            var stock_minParameter = stock_min.HasValue ?
                new ObjectParameter("stock_min", stock_min) :
                new ObjectParameter("stock_min", typeof(int));
    
            var stock_maxParameter = stock_max.HasValue ?
                new ObjectParameter("stock_max", stock_max) :
                new ObjectParameter("stock_max", typeof(int));
    
            var valor_ventaParameter = valor_venta.HasValue ?
                new ObjectParameter("valor_venta", valor_venta) :
                new ObjectParameter("valor_venta", typeof(double));
    
            var valor_mayorParameter = valor_mayor.HasValue ?
                new ObjectParameter("valor_mayor", valor_mayor) :
                new ObjectParameter("valor_mayor", typeof(double));
    
            var valor_especialParameter = valor_especial.HasValue ?
                new ObjectParameter("valor_especial", valor_especial) :
                new ObjectParameter("valor_especial", typeof(double));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("cantidad", cantidad) :
                new ObjectParameter("cantidad", typeof(int));
    
            var productoParameter = producto != null ?
                new ObjectParameter("producto", producto) :
                new ObjectParameter("producto", typeof(string));
    
            var sucursalParameter = sucursal != null ?
                new ObjectParameter("sucursal", sucursal) :
                new ObjectParameter("sucursal", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Registrar_detalle_producto_sucursal", stock_minParameter, stock_maxParameter, valor_ventaParameter, valor_mayorParameter, valor_especialParameter, cantidadParameter, productoParameter, sucursalParameter);
        }
    
        public virtual int Registrar_Producto(string referencia, string descripcion, string estado, string tipo_producto, Nullable<int> cantidad, Nullable<double> precio)
        {
            var referenciaParameter = referencia != null ?
                new ObjectParameter("Referencia", referencia) :
                new ObjectParameter("Referencia", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(string));
    
            var tipo_productoParameter = tipo_producto != null ?
                new ObjectParameter("Tipo_producto", tipo_producto) :
                new ObjectParameter("Tipo_producto", typeof(string));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(int));
    
            var precioParameter = precio.HasValue ?
                new ObjectParameter("precio", precio) :
                new ObjectParameter("precio", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Registrar_Producto", referenciaParameter, descripcionParameter, estadoParameter, tipo_productoParameter, cantidadParameter, precioParameter);
        }
    
        public virtual int registrar_sucursal(string codigo, string nombre, string apodo, string prefijo, string telefono, string direccion, string nit)
        {
            var codigoParameter = codigo != null ?
                new ObjectParameter("codigo", codigo) :
                new ObjectParameter("codigo", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var apodoParameter = apodo != null ?
                new ObjectParameter("apodo", apodo) :
                new ObjectParameter("apodo", typeof(string));
    
            var prefijoParameter = prefijo != null ?
                new ObjectParameter("prefijo", prefijo) :
                new ObjectParameter("prefijo", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("telefono", telefono) :
                new ObjectParameter("telefono", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("direccion", direccion) :
                new ObjectParameter("direccion", typeof(string));
    
            var nitParameter = nit != null ?
                new ObjectParameter("nit", nit) :
                new ObjectParameter("nit", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("registrar_sucursal", codigoParameter, nombreParameter, apodoParameter, prefijoParameter, telefonoParameter, direccionParameter, nitParameter);
        }
    
        public virtual int registrarAbono(Nullable<int> cod, Nullable<System.DateTime> fecha, Nullable<int> credito, Nullable<double> valor, string estado)
        {
            var codParameter = cod.HasValue ?
                new ObjectParameter("cod", cod) :
                new ObjectParameter("cod", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var creditoParameter = credito.HasValue ?
                new ObjectParameter("credito", credito) :
                new ObjectParameter("credito", typeof(int));
    
            var valorParameter = valor.HasValue ?
                new ObjectParameter("valor", valor) :
                new ObjectParameter("valor", typeof(double));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("registrarAbono", codParameter, fechaParameter, creditoParameter, valorParameter, estadoParameter);
        }
    
        public virtual int RegistrarAbonoCuota(Nullable<int> cuotas, Nullable<System.DateTime> fecha, Nullable<double> valorAbono, Nullable<double> recargo)
        {
            var cuotasParameter = cuotas.HasValue ?
                new ObjectParameter("cuotas", cuotas) :
                new ObjectParameter("cuotas", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var valorAbonoParameter = valorAbono.HasValue ?
                new ObjectParameter("valorAbono", valorAbono) :
                new ObjectParameter("valorAbono", typeof(double));
    
            var recargoParameter = recargo.HasValue ?
                new ObjectParameter("recargo", recargo) :
                new ObjectParameter("recargo", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RegistrarAbonoCuota", cuotasParameter, fechaParameter, valorAbonoParameter, recargoParameter);
        }
    
        public virtual int RegistrarDetalleEntrada(Nullable<int> cantidad, Nullable<double> precio, Nullable<int> entrada, string productoSucursal)
        {
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("cantidad", cantidad) :
                new ObjectParameter("cantidad", typeof(int));
    
            var precioParameter = precio.HasValue ?
                new ObjectParameter("precio", precio) :
                new ObjectParameter("precio", typeof(double));
    
            var entradaParameter = entrada.HasValue ?
                new ObjectParameter("entrada", entrada) :
                new ObjectParameter("entrada", typeof(int));
    
            var productoSucursalParameter = productoSucursal != null ?
                new ObjectParameter("productoSucursal", productoSucursal) :
                new ObjectParameter("productoSucursal", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RegistrarDetalleEntrada", cantidadParameter, precioParameter, entradaParameter, productoSucursalParameter);
        }
    
        public virtual int RegistrarDian(Nullable<int> codigo, string resolucion, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin, Nullable<int> numInicio, Nullable<int> numFin, string sucursal, string estado)
        {
            var codigoParameter = codigo.HasValue ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(int));
    
            var resolucionParameter = resolucion != null ?
                new ObjectParameter("Resolucion", resolucion) :
                new ObjectParameter("Resolucion", typeof(string));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            var numInicioParameter = numInicio.HasValue ?
                new ObjectParameter("NumInicio", numInicio) :
                new ObjectParameter("NumInicio", typeof(int));
    
            var numFinParameter = numFin.HasValue ?
                new ObjectParameter("NumFin", numFin) :
                new ObjectParameter("NumFin", typeof(int));
    
            var sucursalParameter = sucursal != null ?
                new ObjectParameter("Sucursal", sucursal) :
                new ObjectParameter("Sucursal", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RegistrarDian", codigoParameter, resolucionParameter, fechaInicioParameter, fechaFinParameter, numInicioParameter, numFinParameter, sucursalParameter, estadoParameter);
        }
    
        public virtual int RegistrarEntrada(Nullable<int> codigo, Nullable<System.DateTime> fecha, Nullable<double> total, string estado, string sucursal, Nullable<int> proveedor)
        {
            var codigoParameter = codigo.HasValue ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            var totalParameter = total.HasValue ?
                new ObjectParameter("Total", total) :
                new ObjectParameter("Total", typeof(double));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            var sucursalParameter = sucursal != null ?
                new ObjectParameter("Sucursal", sucursal) :
                new ObjectParameter("Sucursal", typeof(string));
    
            var proveedorParameter = proveedor.HasValue ?
                new ObjectParameter("Proveedor", proveedor) :
                new ObjectParameter("Proveedor", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RegistrarEntrada", codigoParameter, fechaParameter, totalParameter, estadoParameter, sucursalParameter, proveedorParameter);
        }
    
        public virtual int RegistrarEstado(Nullable<int> id, string nombre)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RegistrarEstado", idParameter, nombreParameter);
        }
    
        public virtual int RegistrarPermiso(Nullable<int> rol, Nullable<int> modulo, Nullable<int> accion, Nullable<int> permiso)
        {
            var rolParameter = rol.HasValue ?
                new ObjectParameter("rol", rol) :
                new ObjectParameter("rol", typeof(int));
    
            var moduloParameter = modulo.HasValue ?
                new ObjectParameter("modulo", modulo) :
                new ObjectParameter("modulo", typeof(int));
    
            var accionParameter = accion.HasValue ?
                new ObjectParameter("accion", accion) :
                new ObjectParameter("accion", typeof(int));
    
            var permisoParameter = permiso.HasValue ?
                new ObjectParameter("permiso", permiso) :
                new ObjectParameter("permiso", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RegistrarPermiso", rolParameter, moduloParameter, accionParameter, permisoParameter);
        }
    
        public virtual int registrarPermisoDEnegado(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("registrarPermisoDEnegado", idParameter);
        }
    
        public virtual int RegistrarPost(Nullable<int> codigo, Nullable<int> numActual, string resolucion, string sucursal)
        {
            var codigoParameter = codigo.HasValue ?
                new ObjectParameter("codigo", codigo) :
                new ObjectParameter("codigo", typeof(int));
    
            var numActualParameter = numActual.HasValue ?
                new ObjectParameter("NumActual", numActual) :
                new ObjectParameter("NumActual", typeof(int));
    
            var resolucionParameter = resolucion != null ?
                new ObjectParameter("Resolucion", resolucion) :
                new ObjectParameter("Resolucion", typeof(string));
    
            var sucursalParameter = sucursal != null ?
                new ObjectParameter("Sucursal", sucursal) :
                new ObjectParameter("Sucursal", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RegistrarPost", codigoParameter, numActualParameter, resolucionParameter, sucursalParameter);
        }
    
        public virtual int RegistrarRol(Nullable<int> codigo, string nombre)
        {
            var codigoParameter = codigo.HasValue ?
                new ObjectParameter("codigo", codigo) :
                new ObjectParameter("codigo", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RegistrarRol", codigoParameter, nombreParameter);
        }
    
        public virtual int RegistrarTipoProd(Nullable<int> cod, string nombre)
        {
            var codParameter = cod.HasValue ?
                new ObjectParameter("cod", cod) :
                new ObjectParameter("cod", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RegistrarTipoProd", codParameter, nombreParameter);
        }
    
        public virtual int registrarTraslado(Nullable<int> codigo, Nullable<System.DateTime> fecha, string sucursal_origen, string sucursal_destino, Nullable<double> total)
        {
            var codigoParameter = codigo.HasValue ?
                new ObjectParameter("codigo", codigo) :
                new ObjectParameter("codigo", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var sucursal_origenParameter = sucursal_origen != null ?
                new ObjectParameter("sucursal_origen", sucursal_origen) :
                new ObjectParameter("sucursal_origen", typeof(string));
    
            var sucursal_destinoParameter = sucursal_destino != null ?
                new ObjectParameter("sucursal_destino", sucursal_destino) :
                new ObjectParameter("sucursal_destino", typeof(string));
    
            var totalParameter = total.HasValue ?
                new ObjectParameter("total", total) :
                new ObjectParameter("total", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("registrarTraslado", codigoParameter, fechaParameter, sucursal_origenParameter, sucursal_destinoParameter, totalParameter);
        }
    
        public virtual int RegistrarUsuario(Nullable<int> id, Nullable<int> tipoDoc, Nullable<int> sucursal, string nom1, string nom2, string apell1, string apell2, string contr, string email, Nullable<int> rol, string estado)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var tipoDocParameter = tipoDoc.HasValue ?
                new ObjectParameter("TipoDoc", tipoDoc) :
                new ObjectParameter("TipoDoc", typeof(int));
    
            var sucursalParameter = sucursal.HasValue ?
                new ObjectParameter("Sucursal", sucursal) :
                new ObjectParameter("Sucursal", typeof(int));
    
            var nom1Parameter = nom1 != null ?
                new ObjectParameter("Nom1", nom1) :
                new ObjectParameter("Nom1", typeof(string));
    
            var nom2Parameter = nom2 != null ?
                new ObjectParameter("Nom2", nom2) :
                new ObjectParameter("Nom2", typeof(string));
    
            var apell1Parameter = apell1 != null ?
                new ObjectParameter("Apell1", apell1) :
                new ObjectParameter("Apell1", typeof(string));
    
            var apell2Parameter = apell2 != null ?
                new ObjectParameter("Apell2", apell2) :
                new ObjectParameter("Apell2", typeof(string));
    
            var contrParameter = contr != null ?
                new ObjectParameter("Contr", contr) :
                new ObjectParameter("Contr", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var rolParameter = rol.HasValue ?
                new ObjectParameter("Rol", rol) :
                new ObjectParameter("Rol", typeof(int));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RegistrarUsuario", idParameter, tipoDocParameter, sucursalParameter, nom1Parameter, nom2Parameter, apell1Parameter, apell2Parameter, contrParameter, emailParameter, rolParameter, estadoParameter);
        }
    
        public virtual int RegistrarVenta(Nullable<int> codigo, Nullable<System.DateTime> fecha, Nullable<double> total, Nullable<double> iva, Nullable<int> cliente, string sucursal, Nullable<double> sub)
        {
            var codigoParameter = codigo.HasValue ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            var totalParameter = total.HasValue ?
                new ObjectParameter("Total", total) :
                new ObjectParameter("Total", typeof(double));
    
            var ivaParameter = iva.HasValue ?
                new ObjectParameter("iva", iva) :
                new ObjectParameter("iva", typeof(double));
    
            var clienteParameter = cliente.HasValue ?
                new ObjectParameter("Cliente", cliente) :
                new ObjectParameter("Cliente", typeof(int));
    
            var sucursalParameter = sucursal != null ?
                new ObjectParameter("Sucursal", sucursal) :
                new ObjectParameter("Sucursal", typeof(string));
    
            var subParameter = sub.HasValue ?
                new ObjectParameter("Sub", sub) :
                new ObjectParameter("Sub", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RegistrarVenta", codigoParameter, fechaParameter, totalParameter, ivaParameter, clienteParameter, sucursalParameter, subParameter);
        }
    
        public virtual int RegProveedor(Nullable<int> id, string cel, string tel, Nullable<int> tipoDoc, string direccion, Nullable<int> nit, string nom1, string nom2, string apell1, string apell2, string empresa, string estado, string email)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var celParameter = cel != null ?
                new ObjectParameter("Cel", cel) :
                new ObjectParameter("Cel", typeof(string));
    
            var telParameter = tel != null ?
                new ObjectParameter("Tel", tel) :
                new ObjectParameter("Tel", typeof(string));
    
            var tipoDocParameter = tipoDoc.HasValue ?
                new ObjectParameter("TipoDoc", tipoDoc) :
                new ObjectParameter("TipoDoc", typeof(int));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("Direccion", direccion) :
                new ObjectParameter("Direccion", typeof(string));
    
            var nitParameter = nit.HasValue ?
                new ObjectParameter("Nit", nit) :
                new ObjectParameter("Nit", typeof(int));
    
            var nom1Parameter = nom1 != null ?
                new ObjectParameter("Nom1", nom1) :
                new ObjectParameter("Nom1", typeof(string));
    
            var nom2Parameter = nom2 != null ?
                new ObjectParameter("Nom2", nom2) :
                new ObjectParameter("Nom2", typeof(string));
    
            var apell1Parameter = apell1 != null ?
                new ObjectParameter("Apell1", apell1) :
                new ObjectParameter("Apell1", typeof(string));
    
            var apell2Parameter = apell2 != null ?
                new ObjectParameter("Apell2", apell2) :
                new ObjectParameter("Apell2", typeof(string));
    
            var empresaParameter = empresa != null ?
                new ObjectParameter("Empresa", empresa) :
                new ObjectParameter("Empresa", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RegProveedor", idParameter, celParameter, telParameter, tipoDocParameter, direccionParameter, nitParameter, nom1Parameter, nom2Parameter, apell1Parameter, apell2Parameter, empresaParameter, estadoParameter, emailParameter);
        }
    
        public virtual int RegSucursal(string codigo, string nombre, string apodo, string prefijo, string telefono, string direccion, string nIT)
        {
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apodoParameter = apodo != null ?
                new ObjectParameter("Apodo", apodo) :
                new ObjectParameter("Apodo", typeof(string));
    
            var prefijoParameter = prefijo != null ?
                new ObjectParameter("Prefijo", prefijo) :
                new ObjectParameter("Prefijo", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("Direccion", direccion) :
                new ObjectParameter("Direccion", typeof(string));
    
            var nITParameter = nIT != null ?
                new ObjectParameter("NIT", nIT) :
                new ObjectParameter("NIT", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RegSucursal", codigoParameter, nombreParameter, apodoParameter, prefijoParameter, telefonoParameter, direccionParameter, nITParameter);
        }
    
        public virtual int RegTipoDoc(Nullable<int> codigo, string nombre)
        {
            var codigoParameter = codigo.HasValue ?
                new ObjectParameter("codigo", codigo) :
                new ObjectParameter("codigo", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RegTipoDoc", codigoParameter, nombreParameter);
        }
    
        public virtual ObjectResult<reporteProductosGlobal_Result> reporteProductosGlobal()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<reporteProductosGlobal_Result>("reporteProductosGlobal");
        }
    
        public virtual ObjectResult<reporteProductosSucursal_Result> reporteProductosSucursal(string cod)
        {
            var codParameter = cod != null ?
                new ObjectParameter("cod", cod) :
                new ObjectParameter("cod", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<reporteProductosSucursal_Result>("reporteProductosSucursal", codParameter);
        }
    
        public virtual ObjectResult<ReporteVenta_Result> ReporteVenta(Nullable<int> cod)
        {
            var codParameter = cod.HasValue ?
                new ObjectParameter("cod", cod) :
                new ObjectParameter("cod", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReporteVenta_Result>("ReporteVenta", codParameter);
        }
    
        public virtual ObjectResult<ReporteVenta1_Result> ReporteVenta1(Nullable<int> cod)
        {
            var codParameter = cod.HasValue ?
                new ObjectParameter("cod", cod) :
                new ObjectParameter("cod", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReporteVenta1_Result>("ReporteVenta1", codParameter);
        }
    
        public virtual ObjectResult<ReporteVenta2_Result> ReporteVenta2(Nullable<int> cod)
        {
            var codParameter = cod.HasValue ?
                new ObjectParameter("cod", cod) :
                new ObjectParameter("cod", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReporteVenta2_Result>("ReporteVenta2", codParameter);
        }
    
        public virtual ObjectResult<RepVentaDetal_Result> RepVentaDetal(Nullable<int> cod)
        {
            var codParameter = cod.HasValue ?
                new ObjectParameter("cod", cod) :
                new ObjectParameter("cod", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RepVentaDetal_Result>("RepVentaDetal", codParameter);
        }
    
        public virtual ObjectResult<SacarAcciones_Result> SacarAcciones()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SacarAcciones_Result>("SacarAcciones");
        }
    
        public virtual ObjectResult<Nullable<long>> sacarid(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("sacarid", emailParameter);
        }
    
        public virtual ObjectResult<sacarModulos_Result> sacarModulos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sacarModulos_Result>("sacarModulos");
        }
    
        public virtual ObjectResult<sacarRoles_Result> sacarRoles()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sacarRoles_Result>("sacarRoles");
        }
    
        public virtual ObjectResult<Nullable<int>> tienepermiso(string controller, string accion, Nullable<int> id)
        {
            var controllerParameter = controller != null ?
                new ObjectParameter("Controller", controller) :
                new ObjectParameter("Controller", typeof(string));
    
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("tienepermiso", controllerParameter, accionParameter, idParameter);
        }
    
        public virtual ObjectResult<tipo_doc_Result> tipo_doc()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tipo_doc_Result>("tipo_doc");
        }
    
        public virtual ObjectResult<Nullable<int>> Usuario_estado(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Usuario_estado", idParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Validar_Cliente(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Validar_Cliente", idParameter);
        }
    }
}
