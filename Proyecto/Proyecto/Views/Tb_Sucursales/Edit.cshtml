@model Proyecto.Models.Tb_Sucursales

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<header class="page-header">
    <div class="container-fluid">
        <div class="row">
            <div class="col-xs-12">
                <h1 class="page-header-heading"><span class="typcn typcn-clipboard page-header-heading-icon"></span>SUCURSALES <small>EDITAR</small></h1>

            </div>
        </div>
    </div>
</header>
<br />

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="container-fluid">
        <div class="col-md-12">
            <div class="widget widget-default">
                <div class="widget-header">Registrar</div>
                <div class="widget-body">

                    <div class="form">
                        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.Codigo)

                        <div class="form-group col-md-6">
                            @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label col-md-2" })

                            @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })

                        </div>

                        <div class="form-group col-md-6">
                            @Html.LabelFor(model => model.Apodo, htmlAttributes: new { @class = "control-label col-md-2" })

                            @Html.EditorFor(model => model.Apodo, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Apodo, "", new { @class = "text-danger" })

                        </div>

                        <div class="form-group col-md-6">
                            @Html.LabelFor(model => model.Prefijo, htmlAttributes: new { @class = "control-label col-md-2" })

                            @Html.EditorFor(model => model.Prefijo, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Prefijo, "", new { @class = "text-danger" })

                        </div>

                        <div class="form-group col-md-6">
                            @Html.LabelFor(model => model.Telefono, htmlAttributes: new { @class = "control-label col-md-2" })

                            @Html.EditorFor(model => model.Telefono, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Telefono, "", new { @class = "text-danger" })

                        </div>

                        <div class="form-group col-md-6">
                            @Html.LabelFor(model => model.Direccion, htmlAttributes: new { @class = "control-label col-md-2" })

                            @Html.EditorFor(model => model.Direccion, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Direccion, "", new { @class = "text-danger" })

                        </div>

                        <div class="form-group col-md-6">
                            @Html.LabelFor(model => model.NIT, htmlAttributes: new { @class = "control-label col-md-2" })

                            @Html.EditorFor(model => model.NIT, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.NIT, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-5 col-md-10">
                                <input type="submit" value="GUARDAR" class="btn btn-primary" />
                            </div>
                        </div>
                    </div>
                    </div>
                </div>
            </div>
        </div>
        
                    }
