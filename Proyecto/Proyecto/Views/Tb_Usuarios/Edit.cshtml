@model Proyecto.Models.Tb_Usuarios

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<header class="page-header ">
    <div class="container-fluid">
        <div class="row">
            <div class="col-xs-12">
                <h1 class="page-header-heading"><span class="typcn typcn-clipboard page-header-heading-icon"></span>USUARIOSZ<small>EDITAR</small></h1>

            </div>
        </div>
    </div>
</header>
<br />

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Identificacion)

        <div class="container-fluid">
            <div class="col-md-12">
                <div class="widget widget-default">
                    <div class="widget-header">Registrar</div>
                    <div class="widget-body">

                        <div class="form">
                            <hr />
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                            <div class="form-group col-md-6">
                                @Html.LabelFor(model => model.Identificacion, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Identificacion, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Identificacion, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group col-md-6">
                                @Html.LabelFor(model => model.Tipo_Documento, "Tipo_Documento", htmlAttributes: new { @class = "control-label col-md-2" })

                                @Html.DropDownList("Tipo_Documento", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Tipo_Documento, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-md-6">
                                @Html.LabelFor(model => model.Sucursal, "Sucursal", htmlAttributes: new { @class = "control-label col-md-2" })

                                @Html.DropDownList("Sucursal", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Sucursal, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group col-md-6">

                                @Html.LabelFor(model => model.Nombre1, htmlAttributes: new { @class = "control-label " })
                                @Html.EditorFor(model => model.Nombre1, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Nombre1, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group col-md-6">

                                @Html.LabelFor(model => model.Nombre2, htmlAttributes: new { @class = "control-label " })
                                @Html.EditorFor(model => model.Nombre2, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Nombre2, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group col-md-6">
                                @Html.LabelFor(model => model.Apellido1, htmlAttributes: new { @class = "control-label col-md-12" })
                                @Html.EditorFor(model => model.Apellido1, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Apellido1, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group col-md-6">
                                @Html.LabelFor(model => model.Apellido2, htmlAttributes: new { @class = "control-label col-md-12" })
                                @Html.EditorFor(model => model.Apellido2, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Apellido2, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group col-md-6">
                                @Html.LabelFor(model => model.Contraseña, htmlAttributes: new { @class = "control-label col-md-2" })

                                @Html.EditorFor(model => model.Contraseña, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Contraseña, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group col-md-6">
                                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })

                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group col-md-6">
                                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-12" })
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group col-md-6">
                                @Html.LabelFor(model => model.Pregunta1, htmlAttributes: new { @class = "control-label col-md-2" })

                                @Html.EditorFor(model => model.Pregunta1, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Pregunta1, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group col-md-6">
                                @Html.LabelFor(model => model.Pregunta2, htmlAttributes: new { @class = "control-label col-md-2" })

                                @Html.EditorFor(model => model.Pregunta2, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Pregunta2, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group col-md-6">
                                @Html.LabelFor(model => model.Respuesta1, htmlAttributes: new { @class = "control-label col-md-2" })

                                @Html.EditorFor(model => model.Respuesta1, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Respuesta1, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group col-md-6">
                                @Html.LabelFor(model => model.Rol, "Rol", htmlAttributes: new { @class = "control-label col-md-2" })

                                @Html.DropDownList("Rol", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Rol, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                <div class="col-md-offset-5 col-md-10">
                                    <input type="submit" value="GUARDAR" class="btn btn-primary" />
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            </div>
 
            }

            
