@model Proyecto.Models.Tb_Estados

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<header class="page-header">
    <div class="container-fluid">
        <div class="row">
            <div class="col-xs-12">
                <h1 class="page-header-heading"><span class="typcn typcn-clipboard page-header-heading-icon"></span>ESTADOS</h1>

            </div>
        </div>
    </div>
</header>
<br />
<script src="~/Scripts/Validation.js"></script>


<script>

    var edito = "@ViewBag.edito";

    if (edito == "edito") {

        swal({ title: "¡ACTUALIZACIÓN EXITOSO!", text: "Estado Actualizado correctamente", type: "success", showConfirmButton: true }, function () { location.href = '/Tb_Estados/Index' });

    }

</script>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <div class="container-fluid">
            <div class="col-md-12">
                <div class="widget widget-default">
                    <div class="widget-header">Editar Estado</div>
                    <div class="widget-body">

                        <div class="form ">
                            <hr />

                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            
                                <div class="form-group col-md-6">
                                    @Html.LabelFor(model => model.Id, htmlAttributes: new { @class = "control-label col-md-2" })

                                    @Html.EditorFor(model => model.Id, new { htmlAttributes = new { @class = "form-control validate-character" } })
                                    @Html.ValidationMessageFor(model => model.Id, "", new { @class = "text-danger" })

                                </div>

                                <div class="form-group col-md-6">
                                    @Html.LabelFor(model => model.Estado, htmlAttributes: new { @class = "control-label col-md-2" })

                                    @Html.EditorFor(model => model.Estado, new { htmlAttributes = new { @class = "form-control validate-number" } })
                                    @Html.ValidationMessageFor(model => model.Estado, "", new { @class = "text-danger" })

                                </div>
                            
                            <div class="form-group">
                                <div class="col-md-offset-5 col-md-10">
                                    <input  onclick="return valesta1();" type="submit" value="Guardar" class="btn btn-primary" />
                                </div>
                            </div>
                            <div class="alert-link">
                                @Html.ActionLink("Regresar al inicio", "Index")
                            </div>
                        </div>
                    </div>
                </div>
            </div>

        </div>

        
    </div>

}


<script>
 function valesta1() {

        valor = document.getElementById("Id").value;
        //doc = document.getElementById("Tipo_Documento").selectedIndex;

        nom1 = document.getElementById("Estado").value;




        //sucur = document.getElementById("Sucursal").selectedIndex;



        //rol = document.getElementById("Rol").selectedIndex;


        if (valor== "" ||   nom1== "" ) {

            sweetAlert("¡ERROR!", "Debe diligenciar los campos obligatorios!", "error");

            return false;
        } 

    }
</script>