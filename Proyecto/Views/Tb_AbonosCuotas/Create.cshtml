@model Proyecto.Models.Tb_AbonosCuotas

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<header class="page-header">
    <div class="container-fluid">
        <div class="row">
            <div class="col-xs-12">
                <h1 class="page-header-heading"><span class="typcn typcn-clipboard page-header-heading-icon"></span>ABONOS CUOTAS</h1>

            </div>
        </div>
    </div>
</header>
<br />


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="container-fluid">
        <div class="col-md-12">
            <div class="widget widget-default">
                <div class="widget-header">Registrar abono</div>
                <div class="widget-body">

                    <div class="form">
                        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group col-md-6">
                            <label id="lblid" class="control-label labels" Text="codigo">Código cuotas *</label>
                            
                            @Html.DropDownList("Cuotas", null, htmlAttributes: new { @class = "form-control", disabled="disabled" })
                            @Html.ValidationMessageFor(model => model.Cuotas, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group col-md-6">
                            <label id="lblid" class="control-label labels" Text="codigo">Fecha *</label>

                            @Html.EditorFor(model => model.FechaAbono, new { htmlAttributes = new { @class = "form-control", @Value = ViewBag.Fecha } })
                            @Html.ValidationMessageFor(model => model.FechaAbono, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group col-md-6">
                            <label id="lblid" class="control-label labels" Text="codigo">Valor *</label>
                            
                            @Html.EditorFor(model => model.ValorAbono, new { htmlAttributes = new { @class = "form-control validate-character" } })
                            @Html.ValidationMessageFor(model => model.ValorAbono, "", new { @class = "text-danger" })

                        </div>

                        <div class="form-group col-md-6">
                            <label id="lblid" class="control-label labels" Text="codigo">Recargo *</label>

                            @Html.EditorFor(model => model.Recargo, new { htmlAttributes = new { @class = "form-control validate-character", disabled="disabled", @Value = ViewBag.Recargo } })
                            @Html.ValidationMessageFor(model => model.Recargo, "", new { @class = "text-danger" })

                        </div>

                        <div class="form-inline">
                            <div class="col-md-offset-5 form-group col-md-12">
                                <input type="submit" onclick="return hola()" value="Registrar" class="btn btn-primary" />
                            </div>
                        </div>
                    </div>
                    </div>
                </div>
            </div>
        </div>
                    }


<script type="text/javascript">

    function hola() {
        var cod = document.getElementById("Cuotas").value;
        var fech = document.getElementById("FechaAbono").value;
        var cred = document.getElementById("ValorAbono").value;
        var val = document.getElementById("Recargo").value;

        if (cod == "" || fech == "" || cred == "" || val == "" ) {

            sweetAlert("¡ERROR!", "Debe diligenciar los campos obligatorios!", "error");

            return false;
        } else {
            $('#Cuotas').removeAttr("disabled");
            $('#Recargo').removeAttr("disabled");
            swal({ title: "¡REGISTRO EXITOSO!", text: "Abono ingresado correctamente", type: "success" }, function () { location.href = "/Tb_Financiacion/Index/"});
            return true;
        }



    }
</script>




