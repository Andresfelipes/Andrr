@model Proyecto.Models.Tb_Financiacion

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<header class="page-header">
    <div class="container-fluid">
        <div class="row">
            <div class="col-xs-12">
                <h1 class="page-header-heading"><span class="typcn typcn-clipboard page-header-heading-icon"></span>FINANCIACIÓN</h1>

            </div>
        </div>
    </div>
</header>
<br />

<script src="~/Scripts/Validation.js"></script>
<link href="~/Alertify/css/alertify.min.css" rel="stylesheet" />
<script src="~/Alertify/alertify.min.js"></script>

<script>

    var correcto = "@ViewBag.correcto";
    if (correcto == "Correcto") {
    }
</script>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()



<div class="container-fluid">
        <div class="col-md-12">
            <div class="widget widget-default">
                <div class="widget-header">Registrar financiación</div>
                <div class="widget-body">


                    <div class="form">
                        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <div class="form-group col-md-6">
                            <label id="lblid" class="control-label labels" Text="cod">Código *</label>
                            @Html.EditorFor(model => model.Codigo, new { htmlAttributes = new { @class = "form-control validate-character", @Value = ViewBag.Codigo } })
                            @Html.ValidationMessageFor(model => model.Codigo, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group col-md-6">
                            <label id="lblid" class="control-label labels" Text="fech">Fecha *</label>
                            @Html.EditorFor(model => model.Fecha, new { htmlAttributes = new { @class = "form-control", @Value = ViewBag.Fecha } })
                            @Html.ValidationMessageFor(model => model.Fecha, "", new { @class = "text-danger" })
                        </div>
                        
                        <div class="form-group col-md-6">
                            <label id="lblid" class="control-label labels" Text="estado">Estado *</label>
                            <div>
                            @Html.DropDownList("Estado", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Estado, "", new { @class = "text-danger" })
                                </div>
                        </div>

                        <div class="form-group col-md-6">
                            <label id="lblid" class="control-label labels" Text="numpag">Número Pagaré *</label>
                            @Html.EditorFor(model => model.Numero_Pagare, new { htmlAttributes = new { @class = "form-control validate-character" } })
                            @Html.ValidationMessageFor(model => model.Numero_Pagare, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group col-md-6">
                            <label id="lblid" class="control-label labels" Text="numf">Tiempo De Pago *</label>
                            <select class="form-control" id="Tiempo" name="Tiempo">
                                <option value="0">Seleccione el tiempo de pago</option>
                                <option value="Quincenal">Quincenal</option>
                                <option value="Mensual">Mensual</option>
                            </select>
                            @Html.ValidationMessageFor(model => model.Tiempo, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group col-md-6">
                            <label id="lblid" class="control-label labels" Text="aum">Aumento *</label>
                            @Html.EditorFor(model => model.Aumento, new { htmlAttributes = new { @class = "form-control validate-character", @Value = ViewBag.Aumento } })
                        </div>

                        <div class="form-group col-md-6">
                            <label id="lblid" class="control-label labels" Text="tot">Total *</label>
                            @Html.EditorFor(model => model.Total, new { htmlAttributes = new { @class = "form-control validate-character" } })
                        </div>

                        <div class="form-group col-md-6">
                            <label id="lblid" class="control-label labels" Text="cuota">Cuota Inicial</label>
                            @Html.EditorFor(model => model.Cuota_Inicial, new { htmlAttributes = new { @class = "form-control ", @onkeyup = "aumentar()" } })
                        </div>

                        <div class="form-group col-md-6">
                            <label id="lblid" class="control-label labels" Text="totadeu">Total Adeudado *</label>
                            @Html.EditorFor(model => model.Total_Adeudado, new { htmlAttributes = new { @class = "form-control validate-character" } })
                        </div>

                        <div class="form-group col-md-6">
                            <label id="lblid" class="control-label labels" Text="venta">Venta *</label>
                            @Html.DropDownList("Venta", null, htmlAttributes: new { @class = "form-control", @onchange = "venta()"})
                            @Html.ValidationMessageFor(model => model.Venta, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-inline">
                            <div class="col-md-offset-5 form-group col-md-12">
                                <input type="submit" value="Registrar" onclick="return regis()" class="btn btn-primary" />
                                <input type="reset" value="Limpiar" class="btn btn-default" />
                            </div>
                        </div>
                    </div>
                </div>
                </div>
            </div>
        </div>
   

}

<script type="text/javascript">
    window.onload = function () {
        var id = $('#Venta').val();
        var datos = { 'id': id };
        $.ajax({
            'url': '/Tb_Financiacion/Venta',
            'dataType': 'json',
            'type': 'post',
            'contentType': "application/json; charset=utf-8",
            'data': JSON.stringify(datos)
        }).done(function (respuesta) {
            console.log(respuesta)
            var num = respuesta[0].Total.toString().split('').reverse().join('').replace(/(?=\d*\.?)(\d{3})/g, '$1.');
            num = num.split('').reverse().join('').replace(/^[\.]/, '');
            $('#Total').val(num);
            total();
        })
    }

    function aumentar() {
        $.ajax({
            'url': '/Tb_Financiacion/Aumento',
            'dataType': 'json',
            'type': 'post',
            'contentType': "application/json; charset=utf-8",
            'data': JSON.stringify()
        }).done(function (respuesta) {
            var aumen = parseFloat(respuesta[0]);
            $("#Aumento").val(aumen);
            total();
        })
    }

    function total() {
        if ($("#Cuota_Inicial").val() != "") {
            var Cuota = parseFloat($("#Cuota_Inicial").val().replace(".", ""));
        } else {
            var Cuota = 0;
        }
        var Total = parseFloat($("#Total").val().replace(".",""));
        var aum = parseFloat($("#Aumento").val().replace(".", ""));
        var aumento = parseFloat((parseFloat(Total) * parseFloat(aum)) / 100);
        var num1 = aumento.toString().split('').reverse().join('').replace(/(?=\d*\.?)(\d{3})/g, '$1.');
        num1 = num1.split('').reverse().join('').replace(/^[\.]/, '');
        $("#Aumento").val(num1);
        var deuda = parseFloat((parseFloat(Total) - parseFloat(Cuota)) + parseFloat(aumento));
        var num = deuda.toString().split('').reverse().join('').replace(/(?=\d*\.?)(\d{3})/g, '$1.');
        num = num.split('').reverse().join('').replace(/^[\.]/, '');
        $("#Total_Adeudado").val(num);
        if ($("#Total_Adeudado").val() == "NaN") {
            $("#Total_Adeudado").val(0);
        }
        var num2 = Cuota.toString().split('').reverse().join('').replace(/(?=\d*\.?)(\d{3})/g, '$1.');
        num2 = num2.split('').reverse().join('').replace(/^[\.]/, '');
        $("#Cuota_Inicial").val(num2);
    }

    function regis() {
        $("#Cuota_Inicial").val($("#Cuota_Inicial").val().replace(".", ""));
        $("#Total_Adeudado").val($("#Total_Adeudado").val().replace(".", ""));
        $("#Aumento").val($("#Aumento").val().replace(".", ""));
        $("#Total").val($("#Total").val().replace(".", ""));
        swal({ title: "¡REGISTRO EXITOSO!", text: "Financiacion registrada correctamente", type: "success", showConfirmButton: true }, function () { location.href = '/Tb_Financiacion/Index' });
    }
</script>

